
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'OR AND NOT XOR IFF LPAR RPAR AX X AF F AG G AU U AR R EX EF EG EU ER LITERAL PROP formula : PROP  formula : LITERAL  formula : NOT formula   formula : LPAR formula OR formula RPAR  formula : LPAR formula AND formula RPAR  formula : LPAR formula XOR formula RPAR  formula : LPAR formula IFF formula RPAR  formula : AX formula  formula : X formula  formula : AF formula  formula : F formula  formula : AG formula  formula : G formula  formula : LPAR formula AU formula RPAR  formula : LPAR formula U formula RPAR  formula : LPAR formula AR formula RPAR  formula : LPAR formula R formula RPAR  formula : EX formula  formula : EF formula  formula : EG formula  formula : LPAR formula EU formula RPAR  formula : LPAR formula ER formula RPAR  formula : LPAR formula RPAR '
    
_lr_action_items = {'PROP':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LITERAL':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'NOT':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LPAR':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'AX':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'X':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AF':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'F':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'AG':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'G':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'EX':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'EF':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'EG':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,15,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[0,-1,-2,-3,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'OR':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,26,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'AND':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,28,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'XOR':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,29,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'IFF':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,30,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'AU':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,31,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'U':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,32,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'AR':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,33,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'R':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,34,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'EU':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,35,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'ER':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,36,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),'RPAR':([2,3,15,16,17,18,19,20,21,22,23,24,25,27,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,],[-1,-2,-3,27,-8,-9,-10,-11,-12,-13,-18,-19,-20,-23,47,48,49,50,51,52,53,54,55,56,-4,-5,-6,-7,-14,-15,-16,-17,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formula':([0,4,5,6,7,8,9,10,11,12,13,14,26,28,29,30,31,32,33,34,35,36,],[1,15,16,17,18,19,20,21,22,23,24,25,37,38,39,40,41,42,43,44,45,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> formula","S'",1,None,None,None),
  ('formula -> PROP','formula',1,'p_formula_prop','ply_parser.py',24),
  ('formula -> LITERAL','formula',1,'p_formula_literal','ply_parser.py',28),
  ('formula -> NOT formula','formula',2,'p_formula_not','ply_parser.py',32),
  ('formula -> LPAR formula OR formula RPAR','formula',5,'p_formula_or','ply_parser.py',36),
  ('formula -> LPAR formula AND formula RPAR','formula',5,'p_formula_and','ply_parser.py',40),
  ('formula -> LPAR formula XOR formula RPAR','formula',5,'p_formula_xor','ply_parser.py',44),
  ('formula -> LPAR formula IFF formula RPAR','formula',5,'p_formula_iff','ply_parser.py',48),
  ('formula -> AX formula','formula',2,'p_formula_AX','ply_parser.py',52),
  ('formula -> X formula','formula',2,'p_formula_X','ply_parser.py',56),
  ('formula -> AF formula','formula',2,'p_formula_AF','ply_parser.py',60),
  ('formula -> F formula','formula',2,'p_formula_F','ply_parser.py',64),
  ('formula -> AG formula','formula',2,'p_formula_AG','ply_parser.py',68),
  ('formula -> G formula','formula',2,'p_formula_G','ply_parser.py',72),
  ('formula -> LPAR formula AU formula RPAR','formula',5,'p_formula_AU','ply_parser.py',76),
  ('formula -> LPAR formula U formula RPAR','formula',5,'p_formula_U','ply_parser.py',80),
  ('formula -> LPAR formula AR formula RPAR','formula',5,'p_formula_AR','ply_parser.py',84),
  ('formula -> LPAR formula R formula RPAR','formula',5,'p_formula_R','ply_parser.py',88),
  ('formula -> EX formula','formula',2,'p_formula_EX','ply_parser.py',92),
  ('formula -> EF formula','formula',2,'p_formula_EF','ply_parser.py',96),
  ('formula -> EG formula','formula',2,'p_formula_EG','ply_parser.py',100),
  ('formula -> LPAR formula EU formula RPAR','formula',5,'p_formula_EU','ply_parser.py',104),
  ('formula -> LPAR formula ER formula RPAR','formula',5,'p_formula_ER','ply_parser.py',108),
  ('formula -> LPAR formula RPAR','formula',3,'p_formula_par','ply_parser.py',112),
]
