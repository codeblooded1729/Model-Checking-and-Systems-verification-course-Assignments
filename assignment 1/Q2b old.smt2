(define-fun T ((x Int)) (Int)
  (ite (= 0 (mod x 2)) (div x 2) (mod (+ 1 (* 2 x)) 8 ))
)
(define-fun T5 ((x Int)) (Int)
  (T (T (T (T (T x)))))
)
(define-fun T6 ((x Int)) (Int)
  (T (T (T (T (T (T x))))))
)
(declare-const a Int)
(assert (< a 8))
(assert (>= a 0))

(declare-const y Int)
(assert (= y (T5 a)))
(check-sat)
(get-model)
(assert ( not (= y 0)))
(check-sat)
(get-model)
(assert ( not (= y 7)))
(check-sat)
(assert (not (= (T6 a) (T5 a))))
(check-sat)
